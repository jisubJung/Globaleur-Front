{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\globaleur\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst Globaleur = ({\n  Component,\n  store\n}) => {\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Globaleur\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.6/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.6/antd.js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nGlobaleur.propTypes = {\n  Component: PropTypes.elementType,\n  store: PropTypes.object\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [// 여기에 store 커스터마이징을 할 수 있음\n  sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(Globaleur);","map":{"version":3,"sources":["D:/프로젝트/globaleur/front/pages/_app.js"],"names":["React","Head","PropTypes","withRedux","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","AppLayout","reducer","rootSaga","Globaleur","Component","store","propTypes","elementType","object","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA0B;AACxC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,6DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,GAAG,EAAC,4DAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ;AAYH,CAbD;;AAeAF,SAAS,CAACG,SAAV,GAAsB;AAClBF,EAAAA,SAAS,EAAEX,SAAS,CAACc,WADH;AAElBF,EAAAA,KAAK,EAAEZ,SAAS,CAACe;AAFC,CAAtB;;AAKA,MAAMC,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC9C,QAAMC,cAAc,GAAGb,oBAAoB,EAA3C;AACA,QAAMc,WAAW,GAAG,CAChB;AACAD,EAAAA,cAFgB,CAApB;AAIA,QAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACXrB,OAAO,CAACD,eAAe,CAAC,GAAGkB,WAAJ,CAAhB,CADI,GAEXjB,OAAO,CACLD,eAAe,CAAC,GAAGkB,WAAJ,CADV,EAEL,CAACF,OAAO,CAACO,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA0HC,CAAC,IAAIA,CAF1H,CAFb;AAOA,QAAMhB,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUS,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACU,GAAf,CAAmBpB,QAAnB;AACA,SAAOG,KAAP;AACH,CAhBD;;AAkBA,eAAeX,SAAS,CAACe,cAAD,CAAT,CAA0BN,SAA1B,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst Globaleur = ({ Component, store }) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Head>\r\n                <title>Globaleur</title>\r\n                <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.6/antd.css' />\r\n                <script src='https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.6/antd.js' />\r\n            </Head>\r\n            <AppLayout>\r\n                <Component />\r\n            </AppLayout>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nGlobaleur.propTypes = {\r\n    Component: PropTypes.elementType,\r\n    store: PropTypes.object,\r\n}\r\n\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [\r\n        // 여기에 store 커스터마이징을 할 수 있음\r\n        sagaMiddleware,\r\n    ];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : compose(\r\n            applyMiddleware(...middlewares),\r\n            !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n        );\r\n\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(Globaleur);"]},"metadata":{},"sourceType":"module"}